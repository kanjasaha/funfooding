@model MealsToGo.ViewModels.ResultSetViewModel


@using MealsToGo.Helpers
@using MealsToGo.Models
@using Trirand.Web.Mvc
@using JQGridMVCExamples.Models;


@{
    ViewBag.Title = "Search" + @Url.Action("Index");
}

@*   <link rel="stylesheet" href="//code.jquery.com/ui/1.10.4/themes/smoothness/jquery-ui.css">*@
@*  <link rel="stylesheet" type="text/css" href="http://www.trirand.net/aspnetmvc/Content/themes/ui.jqgrid.css" />*@
<link href="~/Content/themes/smoothness/ui.jqgrid.css" rel="stylesheet" type="text/css" />

<link href="~/Content/themes/smoothness/jquery-ui.css" rel="stylesheet" type="text/css" />




<script type="text/javascript" src="~/Scripts/grid.locale-en.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.jqGrid.min.js"></script>




<script type="text/javascript">

     function returnHyperLink(cellValue, options, rowdata, action) {
         return "<a href='#' onclick=\"funAddtoCart('" + options.rowId + "','" + rowdata.Price + "');\"><div style=\"text-align: center\"><img src=\"../Content/images/cart-icon.jpg\" alt=\"Add To Cart\" /></div></a>";
    }
    function returnHyperLinkReservation(cellValue, options, rowdata, action) {
        return "<a href='./test.do?custId=" + options.rowId + "' >Make a Reservation</a>";
    }

    function funAddtoCart(MealItemId, Price) {
        var qty = 1;
        jQuery.ajax("/Home/AddtoCart",
         {
             data: { mealItemId: MealItemId, qty: qty, itemName: MealItemId, price: Price },
             type: "GET",
             contentType: "application/json",
             dataType: "json",
             success: function (data) {
                 jQuery('#cartCount').text(data);
                 funGetCount();
           
             },
             error: function (e, s, t) {
               
             }
         });
    }
    function funGetCount() {
   
        jQuery.ajax("/Home/GetCount",
         {
             data: {},
             type: "GET",
             contentType: "application/json",
             dataType: "json",
             success: function (data) {
                 jQuery('#cartCount').text(data);
              
             },
             error: function (e, s, t) {
                 
             }
         });
    }
    funGetCount();
    function funRemoveFromCart(mealItemId) {
        jQuery.ajax("RemoveAllFromCart",
         {
             data: { mealItemId: mealItemId },
             type: "GET",
             contentType: "application/json",
             dataType: "json",
             success: function (data) {
                 window.location.href = "cart";
             },
             error: function (e, s, t) {
               
             }
         });
    }

    jQuery(document).ready(function () {       
        jQuery('.date-tb').unbind();
        jQuery(".date-tb").datepicker({
            dateFormat: "mm/dd/yy",
            minDate: new Date, maxDate: 180
        });

        removeSubgridIcon = function () {
            var $this = jQuery(this);
            $this.find(">tbody>tr.jqgrow>td.ui-sgcollapsed").filter(function () {
                var rowData = $this.jqGrid("getLocalRow",
                        jQuery(this).closest("tr.jqgrow").attr("id"));
                return rowData.Products == null;
            }).unbind("click").html("");
        },

        isHasSubrids = function (data) {
            var l = data.length, i;
            for (i = 0; i < l; i++) {
                if (data[i].Products != null) {
                    return true;
                }
            }
            return false;
        };

        var myData = @Html.Raw(Json.Encode(Model.FoodItems))
               myData, $grid = jQuery("#list");

        $grid.jqGrid({
            datatype: "local",
            data: myData,
            width: "100%",
            colNames: ["Food","Price", "Cuisine", "Kitchen", "Distance", "Add To Cart"],
            //"ProviderType",
            //, "Reservation"
            colModel: [
                  {
                      name: "MealItemName", width: 100, key: false, resizable: false
                  },
               { name: "Price", width: 100, resizable: false },
                   { name: "Cuisine", width: 100, sorttype: "string", resizable: false },
                  { name: "ProviderName", width: 100, sorttype: "string", resizable: false },
                { name: "Distance", width: 100, sorttype: "string", resizable: false },
           

                        { name: "Add To Cart", width: 100, resizable: false, formatter: returnHyperLink },
           //  { name: "Reservation", width: 100, resizable: false, formatter: returnHyperLinkReservation }
            ],
            rowNum: 10,
            rowList: [5, 10, 20],
            pager: "#pager",
            gridview: true,
            ignoreCase: true,
            rownumbers: true,
            hidegrid: false,
            viewrecords: true,
            height: "100%",
            subGrid: isHasSubrids(myData),
            subGridRowExpanded: function (subgridId, rowid) {
                var subgridTableId = subgridId + "_t";
                jQuery("#" + subgridId).html("<table id='" + subgridTableId + "'></table>");
                jQuery("#" + subgridTableId).jqGrid({
                    datatype: "local",
                    data: jQuery(this).jqGrid("getLocalRow", rowid).Products,
                    colNames: ["MealAdID","MealItemName", "MealType", "Ingredients", "Allergens", "Price", "Add To Cart"],
                    colModel: [
                        {
                            name: "MealAdID", width: 100, key: true, resizable: false
                        },
                        {
                            name: "MealItemName", width: 100, key: false, resizable: false
                        },
                          { name: "MealType", width: 100, resizable: false },

                        { name: "Ingredients", width: 100, resizable: false },
                         { name: "AllergenicIngredients", width: 100, resizable: false },
                           { name: "Price", width: 100, resizable: false },

                        { name: "Add To Cart", width: 100, resizable: false, formatter: returnHyperLink },
                    ],
                    height: "100%",
                    rowNum: 10,
                    sortname: "MealItemName",
                    idPrefix: "s_" + rowid + "_"
                });
            },
            caption: "Eateries"
        });
        $grid.jqGrid("navGrid", "#pager", { add: false, edit: false, del: false, search: true, nav: false }, { width: 300 });

        var subGridOptions = $grid.jqGrid("getGridParam", "subGridOptions"),
            plusIcon = subGridOptions.plusicon,
            minusIcon = subGridOptions.minusicon,
            expandAllTitle = "Expand all subgrids",
            collapseAllTitle = "Collapse all subgrids";
        jQuery("#jqgh_" + $grid[0].id + "_subgrid")
            .html('<a style="cursor: pointer;"><span class="ui-icon ' + plusIcon + '" title="' + expandAllTitle + '"></span></a>')
            .click(function () {
                var $spanIcon = jQuery(this).find(">a>span"),
                    $body = jQuery(this).closest(".ui-jqgrid-view")
                        .find(">.ui-jqgrid-bdiv>div>.ui-jqgrid-btable>tbody");
                if ($spanIcon.hasClass(plusIcon)) {
                    $spanIcon.removeClass(plusIcon)
                        .addClass(minusIcon)
                        .attr("title", collapseAllTitle);
                    $body.find(">tr.jqgrow>td.sgcollapsed")
                        .click();
                } else {
                    $spanIcon.removeClass(minusIcon)
                        .addClass(plusIcon)
                        .attr("title", expandAllTitle);
                    $body.find(">tr.jqgrow>td.sgexpanded")
                        .click();
                }
            });
    });
    jQuery("#divAddToCart").dialog({
        resizable: false,
        modal: true,
        title: "Modal",
        height: 250,
        width: 400,
        buttons: {
            Ok: function () {
                jQuery(this).dialog("close");
            }
        }
      
    });
    jQuery("#divAddToCart").dialog("open");
  
</script>

 
   
    <div class="cont-main">
        <div class="se-reslt">
        
            <div class="se-reslt2">
                <h4>Meals Shared</h4>
                <h3>Narrow your choices</h3>
                @foreach (var f in Model.Search.Facets)
                {

                    <h4>
                        @(Html.SolrFieldPropName<SolrResultSet>(@f.Key))
                    </h4>
                    <ul class="filter">
                        <li>  @Html.CheckBox("test", new { @class = "", Styles = "float: left; width: 15px;margin-top:10px" })
                          <a class="removeFacet" href="@Url.RemoveFacet(f.Key) " >@f.Value </a></li>
                    </ul>

                }
                @foreach (var f in Model.Facets)
                {
                    <h4>
                        @(Html.SolrFacetPropName<SolrResultSet>(@f.Key))
                    </h4>
                    <ul class="filter">
                        @foreach (var fv in f.Value)
                        {
                            <li>  @Html.CheckBox("test", new { @class = "", Styles = "float: left; width: 15px;margin-top:10px" })
                          <a href="@Url.SetFacet(f.Key, fv.Key) " style="text-decoration: none;color:black">@fv.Key </a><span>(@fv.Value )</span></li>
                        }
                    </ul>


                }

            </div>
        </div>

        <div class="cont-rit">
            <div class="se-form">
                @using (Html.MyBeginForm(null, null, FormMethod.Get))
                {

                    <label>
                        @*  @Html.TextBoxFor(m => m.Search.PickUpDateSearch, "{0:MM/dd/yyyy}", new { @class = "date-tb", placeholder = "Current Date" })
                        *@   @Html.TextBoxFor(m => m.Search.PickUpDateSearch, "{0:MM/dd/yyyy}", new { @class = "date-tb food-tb2", placeholder = "Current Date", Readonly = true })
                    </label>
                    <label>
                        @Html.TextBoxFor(m => m.Search.FreeSearch, new { @class = "food-tb2", placeholder = "pizza,vegetarian" })
                    </label>
                    <br /><br />
                    <label>
                          @Html.TextBoxFor(m => m.Search.UserLocation, new { @class = "food-tb2", placeholder = "10547 or 123 elk str, CA" })
                       
                    </label>

                    <label>
                        @Html.DropDownListFor(x => x.DistanceDD.SelectedDistanceLimit, Model.DistanceDD.DistanceDDList, "Within", new { @class = "dist-tb food-tb2", style = "width:260px;" })
                        @Html.QueryAsHiddenFields()
                    </label>

                    <input name="button2" type="submit" class="search2" id="button2" value="Search" />
                    if (!string.IsNullOrEmpty(Model.DidYouMean))
                    {
                        <div>Did you mean</div>
                        <strong><em>@Html.ActionLink(@Model.DidYouMean, @Url.ForQuery(Model.DidYouMean))</em></strong>

                    }
                    <br />

                }
                <div style="padding-top:35px;"></div>
                <div class="gride">
                    <table id="list">
                        <tr>
                            <td></td>
                        </tr>
                    </table>
                </div>
                <div id="pager"></div>
            </div>


        </div>
        <div class="clr"></div>
    </div>

    <script type="text/javascript" src="~/Scripts/Funfooding_Order.js"></script>


