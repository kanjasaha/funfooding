@model MealsToGo.ViewModels.UserDetailViewModel


@{
    ViewBag.Title = "Add user details";
   
}
<script language=Javascript>
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
</script>

@using (Html.BeginForm("Create", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    @Html.ValidationSummary(false,"", new { @class = "error" })
    @Html.HiddenFor(model => model.CreatedBy)
    @Html.HiddenFor(model => model.UpdatedBy)
     @Html.HiddenFor(model => model.FirstName)
    @Html.HiddenFor(model => model.UserId)
    <div class="cont-main">
        <h1>Add user details</h1>
        <div class="cont">
            <div class="cont-rit">
                <ul class="gen-form">
                    <li>
                        <p> &nbsp;&nbsp;First Name  </p>
                        @*@Html.DisplayFor(model => model.FirstName, new { @class = "gen-ftb" })*@
                        @Html.DisplayFor(model => model.FirstName, new { @class = "gen-ftb" })
                       
                    </li>
                    <li>
                        <p>* Last Name </p>
                        @Html.EditorFor(model => model.LastName, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.LastName, string.Empty,new { @class="required"})
                    </li>
                    <li>
                        <p>* Address  </p>
                        @Html.EditorFor(model => model.Address.Address1, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.Address.Address1,string.Empty,new { @class="required"})
                    </li>
                    <li>
                        <p>&nbsp;&nbsp;Address 2</p>
                        @Html.EditorFor(model => model.Address.Address2, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.Address.Address2)
                    </li>
                    <li>
                        <p>* City </p>
                        @Html.EditorFor(model => model.Address.City, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.Address.City,string.Empty,new { @class="required"})
                    </li>
                    <li>
                        <p>* Zip </p>
                        @Html.EditorFor(model => model.Address.Zip, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.Address.Zip,string.Empty,new { @class="required"})
                    </li>
                    <li>
                        <p>* State/Province</p>
                        @Html.EditorFor(model => model.Address.Province, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.Address.Province,string.Empty,new { @class="required"})
                    </li>
                    <li>
                        <p>* Country </p>
                        @Html.DropDownListFor(x => x.Address.CountryID, Model.CountryDDList, "Country", new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.Address.CountryID,string.Empty,new { @class="required"})
                    </li>
                     
                   
                    <li>
                        <p>Kitchen Name</p>
                        @Html.EditorFor(model => model.KitchenName, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.PassportNumber)
                    </li>
                    <li>
                        <p>Telephone</p>
                        @Html.EditorFor(model => model.Address.Telephone, new { onkeypress = "return isNumberKey(event)", @class = "gen-ftb" })
                       
                          @Html.ValidationMessageFor(model => model.Address.Telephone,string.Empty,new { @class="required"})
                    </li>
                    <li>
                        <p>Mobile</p>
                        @Html.EditorFor(model => model.Mobile, new { onkeypress = "return isNumberKey(event)", @class = "gen-ftb" })

                        
                        @Html.ValidationMessageFor(model => model.Mobile,string.Empty,new { @class="required"})
                    </li>
                    <li>
                        <p>SkypeID</p>
                        @Html.EditorFor(model => model.SkypeID, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.SkypeID,string.Empty,new { @class="required"})
                    </li>
                    <li>
                        <p>Profile Photo:</p>


                        <label>
                            @Html.TextBoxFor(model => model.Photo, new { type = "file", accept = ".png,.bmp,.jpg,.tif,.gif" })
                            @Html.ValidationMessageFor(model => model.Photo)
                        </label>
                        <label class="agree"></label>
                    </li>
                  
                    <li>
                        <label>

                            <input type="submit" name="button2" id="button2" value="Create Profile" class="submit" />
                        </label>
                        <a href="#">@Html.ActionLink("Back to List", "Index", null, new { @class = "menu-14u" })</a></li>
                    <div class="clr"></div>
                </ul>


            </div>
            <div class="clr"></div>

        </div>

    </div>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
