@model MealsToGo.ViewModels.MealItemViewModel

@{
    ViewBag.Title = "Meal Item - Edit";
}

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.DateUpdated)
    @Html.HiddenFor(model => model.UserId)
    @Html.HiddenFor(model => model.Status)
    @Html.HiddenFor(model => model.MealItemId)
    <div class="cont-main">
        <h1>Meal Item - Edit</h1>

        <div class="cont">
            <div class="cont-rit">
                <ul class="gen-form">
                    <li>
                        <p>Name of Food</p>

                        @Html.TextBoxFor(model => model.MealItemName, new { placeholder = "Pizza,sandwich,kebab...", @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.MealItemName)
                    </li>
                    <li>
                        <p>Ingredients</p>
                        @Html.TextAreaFor(model => model.Ingredients, new { placeholder = "tomato,cheese,basil...", @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.Ingredients)

                    </li>
                    <li>
                        <p>Diet Type</p>
                        @Html.DropDownListFor(x => x.DietTypeDD.SelectedDietType, Model.DietTypeDD.DietTypeDDList, "Diet Type", new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.DietTypeDD.SelectedDietType)
                    </li>
                    <li>
                        <p>Meal Type</p>
                        @Html.DropDownListFor(x => x.MealTypeDD.SelectedMealType, Model.MealTypeDD.MealTypeDDList, "Meal Type", new { @class = "gen-ftb" })

                        @Html.ValidationMessageFor(model => model.MealTypeDD.SelectedMealType)

                    </li>
                    <li>
                        <p>Cuisine Type</p>
                        @Html.DropDownListFor(x => x.CusineTypeDD.SelectedCuisine, Model.CusineTypeDD.CuisineDDList, "Cuisine Type", new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.CusineTypeDD.SelectedCuisine)
                    </li>
                    <li>
                        <p>Serving Unit</p>
                        @Html.DropDownListFor(x => x.ServingUnit, Model.ServingUnitDDList, "Serving Unit", new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.ServingUnit)

                    </li>
                    <li>
                        <p>Quantity</p>
                        @Html.EditorFor(model => model.Quantity, new { placeholder = "Quantity", @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.Quantity)

                    </li>

                    <li>
                        <p>Allergens(If Any)</p>
                        @Html.EditorFor(model => model.AllergenDD)

                    <li>
                        <p>Photo Upload :</p>


                        <label>
                            @Html.TextBoxFor(model => model.Photos, new { type = "file", multiple = "multiple" })
                            @Html.ValidationMessageFor(model => model.Photos)
                        </label>
                        <label class="agree"></label>
                    </li>
                    <li>
                        <label>
                            <input type="submit" name="button2" id="button2" value="Save" class="submit" />
                        </label>
                        @Html.ActionLink("Back to List", "Index",  new { userID = WebSecurity.CurrentUserId }, new { @class = "menu-14u" })
                        @*@Html.ActionLink("Back to List", "Index", new { @class = "menu-14u" })*@
                    </li>
                    <div class="clr"></div>
                </ul>


            </div>
            <div class="clr"></div>

        </div>

    </div>

    
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
